/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/weather/route";
exports.ids = ["app/api/weather/route"];
exports.modules = {

/***/ "(rsc)/./app/api/weather/route.ts":
/*!**********************************!*\
  !*** ./app/api/weather/route.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n\nconst cache = new Map();\nconst CACHE_DURATION_MS = 30 * 60 * 1000 // 30 minutes\n;\nconst weatherCodes = {\n    0: \"Unknown\",\n    1000: \"Clear, Sunny\",\n    1100: \"Mostly Clear\",\n    1101: \"Partly Cloudy\",\n    1102: \"Mostly Cloudy\",\n    1001: \"Cloudy\",\n    2000: \"Fog\",\n    2100: \"Light Fog\",\n    4000: \"Drizzle\",\n    4001: \"Rain\",\n    4200: \"Light Rain\",\n    4201: \"Heavy Rain\",\n    5000: \"Snow\",\n    5001: \"Flurries\",\n    5100: \"Light Snow\",\n    5101: \"Heavy Snow\",\n    6000: \"Freezing Drizzle\",\n    6001: \"Freezing Rain\",\n    6200: \"Light Freezing Rain\",\n    6201: \"Heavy Freezing Rain\",\n    7000: \"Ice Pellets\",\n    7101: \"Heavy Ice Pellets\",\n    7102: \"Light Ice Pellets\",\n    8000: \"Thunderstorm\"\n};\nfunction getWeatherDescription(code) {\n    return weatherCodes[code] || \"Unknown Weather\";\n}\nfunction getWeatherMain(code) {\n    if (code === 1000) return 'Clear';\n    if (code >= 1001 && code <= 1102) return 'Clouds';\n    if (code >= 4000 && code <= 4201) return 'Rain';\n    if (code >= 5000 && code <= 5101) return 'Snow' // Assuming you might add a snow icon later\n    ;\n    if (code >= 6000 && code <= 6201) return 'Rain';\n    if (code >= 7000 && code <= 7102) return 'Snow' // Ice pellets, mapping to snow\n    ;\n    if (code === 8000) return 'Rain' // Thunderstorm, mapping to rain\n    ;\n    return 'Clouds' // Default\n    ;\n}\nasync function GET(request) {\n    try {\n        const { searchParams } = new URL(request.url);\n        let lat = searchParams.get('lat');\n        let lon = searchParams.get('lon');\n        const forceRefresh = searchParams.get('forceRefresh') === 'true';\n        const apiKey = process.env.TOMORROW_IO_API_KEY;\n        if (!apiKey) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: 'Weather API key not configured',\n                message: 'Please provide a valid Tomorrow.io API key'\n            }, {\n                status: 500\n            });\n        }\n        if (!lat || !lon) {\n            const ip = request.headers.get('x-forwarded-for') || '8.8.8.8';\n            try {\n                const geoResponse = await fetch(`http://ip-api.com/json/${ip}?fields=lat,lon`);\n                if (!geoResponse.ok) {\n                    // Default to San Francisco coordinates if IP geolocation fails\n                    lat = '37.7749';\n                    lon = '-122.4194';\n                } else {\n                    const geoData = await geoResponse.json();\n                    lat = geoData.lat.toString();\n                    lon = geoData.lon.toString();\n                }\n            } catch (error) {\n                // Default to San Francisco coordinates if IP geolocation fails\n                lat = '37.7749';\n                lon = '-122.4194';\n            }\n        }\n        if (!lat || !lon) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: 'Could not determine location.'\n            }, {\n                status: 400\n            });\n        }\n        const cacheKey = `${lat},${lon}`;\n        const cachedEntry = cache.get(cacheKey);\n        if (cachedEntry && !forceRefresh) {\n            const isCacheValid = Date.now() - cachedEntry.timestamp < CACHE_DURATION_MS;\n            if (isCacheValid) {\n                return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                    success: true,\n                    data: cachedEntry.data\n                });\n            }\n        }\n        const options = {\n            method: 'GET',\n            headers: {\n                accept: 'application/json',\n                'accept-encoding': 'deflate, gzip, br'\n            }\n        };\n        const [realtimeResponse, forecastResponse] = await Promise.all([\n            fetch(`https://api.tomorrow.io/v4/weather/realtime?location=${lat},${lon}&apikey=${apiKey}&units=metric`, options),\n            fetch(`https://api.tomorrow.io/v4/weather/forecast?location=${lat},${lon}&apikey=${apiKey}&units=metric&timesteps=1d`, options)\n        ]);\n        if (!realtimeResponse.ok) {\n            const errorData = await realtimeResponse.text();\n            throw new Error(`Tomorrow.io Realtime API error: ${realtimeResponse.status} - ${errorData}`);\n        }\n        if (!forecastResponse.ok) {\n            const errorData = await forecastResponse.text();\n            throw new Error(`Tomorrow.io Forecast API error: ${forecastResponse.status} - ${errorData}`);\n        }\n        const realtimeData = await realtimeResponse.json();\n        const forecastData = await forecastResponse.json();\n        const currentValues = realtimeData.data.values;\n        const locationName = realtimeData.location.name || 'Unknown location';\n        const dailyForecast = forecastData.timelines?.daily?.[0]?.values || {};\n        const responseData = {\n            temperature: Math.round(currentValues.temperature),\n            description: getWeatherDescription(currentValues.weatherCode),\n            high: Math.round(dailyForecast.temperatureMax || currentValues.temperature),\n            low: Math.round(dailyForecast.temperatureMin || currentValues.temperature),\n            humidity: Math.round(currentValues.humidity),\n            rainChance: Math.round(currentValues.precipitationProbability || 0),\n            location: locationName,\n            main: getWeatherMain(currentValues.weatherCode)\n        };\n        cache.set(cacheKey, {\n            data: responseData,\n            timestamp: Date.now()\n        });\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            data: responseData\n        });\n    } catch (error) {\n        console.error('Weather API error:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: 'Failed to fetch weather data',\n            message: error instanceof Error ? error.message : 'Unknown error'\n        }, {\n            status: 500\n        });\n    }\n}\nasync function POST(request) {\n    try {\n        const apiKey = process.env.TOMORROW_IO_API_KEY;\n        if (!apiKey) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: 'Weather API key not configured',\n                message: 'Please provide a valid Tomorrow.io API key'\n            }, {\n                status: 500\n            });\n        }\n        const cities = [\n            {\n                name: \"San Francisco\",\n                lat: 37.7749,\n                lon: -122.4194\n            },\n            {\n                name: \"New York\",\n                lat: 40.7128,\n                lon: -74.0060\n            },\n            {\n                name: \"London\",\n                lat: 51.5074,\n                lon: -0.1278\n            }\n        ];\n        const weatherPromises = cities.map(async (city)=>{\n            try {\n                const options = {\n                    method: 'GET',\n                    headers: {\n                        accept: 'application/json',\n                        'accept-encoding': 'deflate, gzip, br'\n                    }\n                };\n                // Get current weather and 12-hour forecast\n                const [currentResponse, forecastResponse] = await Promise.all([\n                    fetch(`https://api.tomorrow.io/v4/weather/realtime?location=${city.lat},${city.lon}&apikey=${apiKey}&units=metric`, options),\n                    fetch(`https://api.tomorrow.io/v4/weather/forecast?location=${city.lat},${city.lon}&apikey=${apiKey}&units=metric&timesteps=1h`, options)\n                ]);\n                if (!currentResponse.ok || !forecastResponse.ok) {\n                    throw new Error(`Weather API error for ${city.name}`);\n                }\n                const [currentData, forecastData] = await Promise.all([\n                    currentResponse.json(),\n                    forecastResponse.json()\n                ]);\n                const weather = currentData.data.values;\n                const forecast = forecastData.data?.timelines?.[0]?.intervals?.slice(1, 13) || [];\n                return {\n                    city: city.name,\n                    temperature: Math.round(weather.temperature),\n                    description: getWeatherDescription(weather.weatherCode),\n                    rainChance: Math.round(weather.precipitationProbability || 0),\n                    high: Math.round(weather.temperatureMax || weather.temperature + 5),\n                    low: Math.round(weather.temperatureMin || weather.temperature - 5),\n                    humidity: Math.round(weather.humidity || 0),\n                    location: city.name,\n                    forecast: forecast.map((interval)=>({\n                            time: new Date(interval.startTime).getHours(),\n                            temperature: Math.round(interval.values.temperature),\n                            rainChance: Math.round(interval.values.precipitationProbability || 0),\n                            weatherCode: interval.values.weatherCode\n                        }))\n                };\n            } catch (error) {\n                console.error(`Weather API error for ${city.name}:`, error);\n                return null;\n            }\n        });\n        const weatherData = await Promise.all(weatherPromises);\n        const validWeatherData = weatherData.filter((data)=>data !== null);\n        if (!validWeatherData.length) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                success: false,\n                error: 'Failed to fetch weather data for all cities'\n            }, {\n                status: 500\n            });\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            data: validWeatherData\n        });\n    } catch (error) {\n        console.error('Multi-city weather API error:', error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: false,\n            error: 'Failed to fetch multi-city weather data',\n            message: error instanceof Error ? error.message : 'Unknown error'\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/weather/route.ts\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fweather%2Froute&page=%2Fapi%2Fweather%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fweather%2Froute.ts&appDir=%2FUsers%2Fybot%2Fbye%2Fbye%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fybot%2Fbye%2Fbye&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":
/*!*************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fweather%2Froute&page=%2Fapi%2Fweather%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fweather%2Froute.ts&appDir=%2FUsers%2Fybot%2Fbye%2Fbye%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fybot%2Fbye%2Fbye&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!
  \*************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_ybot_bye_bye_app_api_weather_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/weather/route.ts */ \"(rsc)/./app/api/weather/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/weather/route\",\n        pathname: \"/api/weather\",\n        filename: \"route\",\n        bundlePath: \"app/api/weather/route\"\n    },\n    resolvedPagePath: \"/Users/ybot/bye/bye/app/api/weather/route.ts\",\n    nextConfigOutput,\n    userland: _Users_ybot_bye_bye_app_api_weather_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIvaW5kZXguanM/bmFtZT1hcHAlMkZhcGklMkZ3ZWF0aGVyJTJGcm91dGUmcGFnZT0lMkZhcGklMkZ3ZWF0aGVyJTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGd2VhdGhlciUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRnlib3QlMkZieWUlMkZieWUlMkZhcHAmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZyb290RGlyPSUyRlVzZXJzJTJGeWJvdCUyRmJ5ZSUyRmJ5ZSZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBK0Y7QUFDdkM7QUFDcUI7QUFDSjtBQUN6RTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IseUdBQW1CO0FBQzNDO0FBQ0EsY0FBYyxrRUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLHNEQUFzRDtBQUM5RDtBQUNBLFdBQVcsNEVBQVc7QUFDdEI7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUMwRjs7QUFFMUYiLCJzb3VyY2VzIjpbIiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBSb3V0ZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvcm91dGUtbW9kdWxlcy9hcHAtcm91dGUvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBwYXRjaEZldGNoIGFzIF9wYXRjaEZldGNoIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3BhdGNoLWZldGNoXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiL1VzZXJzL3lib3QvYnllL2J5ZS9hcHAvYXBpL3dlYXRoZXIvcm91dGUudHNcIjtcbi8vIFdlIGluamVjdCB0aGUgbmV4dENvbmZpZ091dHB1dCBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgbmV4dENvbmZpZ091dHB1dCA9IFwiXCJcbmNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IEFwcFJvdXRlUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9ST1VURSxcbiAgICAgICAgcGFnZTogXCIvYXBpL3dlYXRoZXIvcm91dGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS93ZWF0aGVyXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS93ZWF0aGVyL3JvdXRlXCJcbiAgICB9LFxuICAgIHJlc29sdmVkUGFnZVBhdGg6IFwiL1VzZXJzL3lib3QvYnllL2J5ZS9hcHAvYXBpL3dlYXRoZXIvcm91dGUudHNcIixcbiAgICBuZXh0Q29uZmlnT3V0cHV0LFxuICAgIHVzZXJsYW5kXG59KTtcbi8vIFB1bGwgb3V0IHRoZSBleHBvcnRzIHRoYXQgd2UgbmVlZCB0byBleHBvc2UgZnJvbSB0aGUgbW9kdWxlLiBUaGlzIHNob3VsZFxuLy8gYmUgZWxpbWluYXRlZCB3aGVuIHdlJ3ZlIG1vdmVkIHRoZSBvdGhlciByb3V0ZXMgdG8gdGhlIG5ldyBmb3JtYXQuIFRoZXNlXG4vLyBhcmUgdXNlZCB0byBob29rIGludG8gdGhlIHJvdXRlLlxuY29uc3QgeyB3b3JrQXN5bmNTdG9yYWdlLCB3b3JrVW5pdEFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MgfSA9IHJvdXRlTW9kdWxlO1xuZnVuY3Rpb24gcGF0Y2hGZXRjaCgpIHtcbiAgICByZXR1cm4gX3BhdGNoRmV0Y2goe1xuICAgICAgICB3b3JrQXN5bmNTdG9yYWdlLFxuICAgICAgICB3b3JrVW5pdEFzeW5jU3RvcmFnZVxuICAgIH0pO1xufVxuZXhwb3J0IHsgcm91dGVNb2R1bGUsIHdvcmtBc3luY1N0b3JhZ2UsIHdvcmtVbml0QXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgcGF0Y2hGZXRjaCwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fweather%2Froute&page=%2Fapi%2Fweather%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fweather%2Froute.ts&appDir=%2FUsers%2Fybot%2Fbye%2Fbye%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fybot%2Fbye%2Fbye&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "../app-render/work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fweather%2Froute&page=%2Fapi%2Fweather%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fweather%2Froute.ts&appDir=%2FUsers%2Fybot%2Fbye%2Fbye%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fybot%2Fbye%2Fbye&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();