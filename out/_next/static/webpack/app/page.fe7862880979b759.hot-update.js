"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./lib/actions/ai.ts":
/*!***************************!*\
  !*** ./lib/actions/ai.ts ***!
  \***************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   askAi: () => (/* binding */ askAi),\n/* harmony export */   generateResponse: () => (/* binding */ generateResponse),\n/* harmony export */   submitChat: () => (/* binding */ submitChat)\n/* harmony export */ });\n// AI action stubs for Chrome extension build\n// These replace AI server actions that don't work in static extension environment\nconst askAi = async (_userMessage, hasSeenOnboarding, _onboardingStep, _userName, _agentName)=>{\n    return {\n        success: true,\n        data: {\n            response: \"AI features require web app. Please use the full web version for AI chat.\",\n            onboardingStep: hasSeenOnboarding ? undefined : 1\n        },\n        serverError: null\n    };\n};\nconst submitChat = async (_input)=>{\n    return {\n        data: {\n            message: \"AI chat not available in extension mode\"\n        },\n        serverError: null\n    };\n};\nconst generateResponse = async (_input)=>{\n    return {\n        data: {\n            response: \"AI features require web app\"\n        },\n        serverError: null\n    };\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi9hY3Rpb25zL2FpLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLDZDQUE2QztBQUM3QyxrRkFBa0Y7QUFlM0UsTUFBTUEsUUFBUSxPQUNuQkMsY0FDQUMsbUJBQ0FDLGlCQUNBQyxXQUNBQztJQUVBLE9BQU87UUFDTEMsU0FBUztRQUNUQyxNQUFNO1lBQ0pDLFVBQVU7WUFDVkMsZ0JBQWdCUCxvQkFBb0JRLFlBQVk7UUFDbEQ7UUFDQUMsYUFBYTtJQUNmO0FBQ0YsRUFBRTtBQUVLLE1BQU1DLGFBQWEsT0FBT0M7SUFDL0IsT0FBTztRQUNMTixNQUFNO1lBQUVPLFNBQVM7UUFBMEM7UUFDM0RILGFBQWE7SUFDZjtBQUNGLEVBQUU7QUFFSyxNQUFNSSxtQkFBbUIsT0FBT0Y7SUFDckMsT0FBTztRQUNMTixNQUFNO1lBQUVDLFVBQVU7UUFBOEI7UUFDaERHLGFBQWE7SUFDZjtBQUNGLEVBQUUiLCJzb3VyY2VzIjpbIi9Vc2Vycy95Ym90L0RvY3VtZW50cy9aREVWRUxPUE1FTlQvY2xlYXJ0YWJBUFAvbGliL2FjdGlvbnMvYWkudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gQUkgYWN0aW9uIHN0dWJzIGZvciBDaHJvbWUgZXh0ZW5zaW9uIGJ1aWxkXG4vLyBUaGVzZSByZXBsYWNlIEFJIHNlcnZlciBhY3Rpb25zIHRoYXQgZG9uJ3Qgd29yayBpbiBzdGF0aWMgZXh0ZW5zaW9uIGVudmlyb25tZW50XG5cbmludGVyZmFjZSBBaVJlc3BvbnNlIHtcbiAgcmVzcG9uc2U6IHN0cmluZztcbiAgb25ib2FyZGluZ1N0ZXA/OiBudW1iZXI7XG59XG5cbmludGVyZmFjZSBDaGF0RGF0YSB7XG4gIG1lc3NhZ2U6IHN0cmluZztcbn1cblxuaW50ZXJmYWNlIEdlbmVyYXRlRGF0YSB7XG4gIHJlc3BvbnNlOiBzdHJpbmc7XG59XG5cbmV4cG9ydCBjb25zdCBhc2tBaSA9IGFzeW5jIChcbiAgX3VzZXJNZXNzYWdlPzogc3RyaW5nLFxuICBoYXNTZWVuT25ib2FyZGluZz86IGJvb2xlYW4sXG4gIF9vbmJvYXJkaW5nU3RlcD86IG51bWJlcixcbiAgX3VzZXJOYW1lPzogc3RyaW5nLFxuICBfYWdlbnROYW1lPzogc3RyaW5nXG4pOiBQcm9taXNlPHsgc3VjY2VzczogYm9vbGVhbjsgZGF0YTogQWlSZXNwb25zZTsgc2VydmVyRXJyb3I6IHN0cmluZyB8IG51bGwgfT4gPT4ge1xuICByZXR1cm4ge1xuICAgIHN1Y2Nlc3M6IHRydWUsXG4gICAgZGF0YToge1xuICAgICAgcmVzcG9uc2U6IFwiQUkgZmVhdHVyZXMgcmVxdWlyZSB3ZWIgYXBwLiBQbGVhc2UgdXNlIHRoZSBmdWxsIHdlYiB2ZXJzaW9uIGZvciBBSSBjaGF0LlwiLFxuICAgICAgb25ib2FyZGluZ1N0ZXA6IGhhc1NlZW5PbmJvYXJkaW5nID8gdW5kZWZpbmVkIDogMVxuICAgIH0sXG4gICAgc2VydmVyRXJyb3I6IG51bGwsXG4gIH07XG59O1xuXG5leHBvcnQgY29uc3Qgc3VibWl0Q2hhdCA9IGFzeW5jIChfaW5wdXQ/OiBSZWNvcmQ8c3RyaW5nLCB1bmtub3duPik6IFByb21pc2U8eyBkYXRhOiBDaGF0RGF0YTsgc2VydmVyRXJyb3I6IHN0cmluZyB8IG51bGwgfT4gPT4ge1xuICByZXR1cm4ge1xuICAgIGRhdGE6IHsgbWVzc2FnZTogXCJBSSBjaGF0IG5vdCBhdmFpbGFibGUgaW4gZXh0ZW5zaW9uIG1vZGVcIiB9LFxuICAgIHNlcnZlckVycm9yOiBudWxsLFxuICB9O1xufTtcblxuZXhwb3J0IGNvbnN0IGdlbmVyYXRlUmVzcG9uc2UgPSBhc3luYyAoX2lucHV0PzogUmVjb3JkPHN0cmluZywgdW5rbm93bj4pOiBQcm9taXNlPHsgZGF0YTogR2VuZXJhdGVEYXRhOyBzZXJ2ZXJFcnJvcjogc3RyaW5nIHwgbnVsbCB9PiA9PiB7XG4gIHJldHVybiB7XG4gICAgZGF0YTogeyByZXNwb25zZTogXCJBSSBmZWF0dXJlcyByZXF1aXJlIHdlYiBhcHBcIiB9LFxuICAgIHNlcnZlckVycm9yOiBudWxsLFxuICB9O1xufTtcbiJdLCJuYW1lcyI6WyJhc2tBaSIsIl91c2VyTWVzc2FnZSIsImhhc1NlZW5PbmJvYXJkaW5nIiwiX29uYm9hcmRpbmdTdGVwIiwiX3VzZXJOYW1lIiwiX2FnZW50TmFtZSIsInN1Y2Nlc3MiLCJkYXRhIiwicmVzcG9uc2UiLCJvbmJvYXJkaW5nU3RlcCIsInVuZGVmaW5lZCIsInNlcnZlckVycm9yIiwic3VibWl0Q2hhdCIsIl9pbnB1dCIsIm1lc3NhZ2UiLCJnZW5lcmF0ZVJlc3BvbnNlIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/actions/ai.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./lib/actions/settings.ts":
/*!*********************************!*\
  !*** ./lib/actions/settings.ts ***!
  \*********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   askAi: () => (/* binding */ askAi),\n/* harmony export */   generateResponse: () => (/* binding */ generateResponse),\n/* harmony export */   getPaydaySettings: () => (/* binding */ getPaydaySettings),\n/* harmony export */   saveApiKey: () => (/* binding */ saveApiKey),\n/* harmony export */   savePaydaySettings: () => (/* binding */ savePaydaySettings),\n/* harmony export */   submitChat: () => (/* binding */ submitChat)\n/* harmony export */ });\n// Stub implementations for Chrome extension build\n// These replace server actions that don't work in static extension environment\nconst getPaydaySettings = async (_input)=>{\n    // In extension, get from Chrome storage instead of database\n    return new Promise((resolve)=>{\n        if (typeof chrome !== \"undefined\" && chrome.storage) {\n            chrome.storage.sync.get([\n                \"paydaySettings\"\n            ], (result)=>{\n                resolve({\n                    data: result.paydaySettings || null,\n                    serverError: null\n                });\n            });\n        } else {\n            resolve({\n                data: null,\n                serverError: null\n            });\n        }\n    });\n};\nconst savePaydaySettings = async (input)=>{\n    return new Promise((resolve)=>{\n        if (typeof chrome !== \"undefined\" && chrome.storage) {\n            chrome.storage.sync.set({\n                paydaySettings: input\n            }, ()=>{\n                resolve({\n                    data: input,\n                    serverError: null\n                });\n            });\n        } else {\n            resolve({\n                data: input,\n                serverError: null\n            });\n        }\n    });\n};\nconst saveApiKey = async (input)=>{\n    return new Promise((resolve)=>{\n        if (typeof chrome !== \"undefined\" && chrome.storage) {\n            chrome.storage.sync.set({\n                apiKey: input\n            }, ()=>{\n                resolve({\n                    data: {\n                        success: true\n                    },\n                    serverError: null\n                });\n            });\n        } else {\n            resolve({\n                data: {\n                    success: true\n                },\n                serverError: null\n            });\n        }\n    });\n};\n// AI action stubs\nconst submitChat = async (_input)=>{\n    return {\n        data: {\n            message: \"AI chat not available in extension mode\"\n        },\n        serverError: null\n    };\n};\nconst generateResponse = async (_input)=>{\n    return {\n        data: {\n            response: \"AI features require web app\"\n        },\n        serverError: null\n    };\n};\nconst askAi = async (_userMessage, hasSeenOnboarding, _onboardingStep, _userName, _agentName)=>{\n    return {\n        success: true,\n        data: {\n            response: \"AI features require web app. Please use the full web version for AI chat.\",\n            onboardingStep: hasSeenOnboarding ? undefined : 1\n        },\n        serverError: null\n    };\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi9hY3Rpb25zL3NldHRpbmdzLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFBLGtEQUFrRDtBQUNsRCwrRUFBK0U7QUFvQnhFLE1BQU1BLG9CQUFvQixPQUMvQkM7SUFFQSw0REFBNEQ7SUFDNUQsT0FBTyxJQUFJQyxRQUFRLENBQUNDO1FBQ2xCLElBQUksT0FBT0MsV0FBVyxlQUFlQSxPQUFPQyxPQUFPLEVBQUU7WUFDbkRELE9BQU9DLE9BQU8sQ0FBQ0MsSUFBSSxDQUFDQyxHQUFHLENBQUM7Z0JBQUM7YUFBaUIsRUFBRSxDQUFDQztnQkFDM0NMLFFBQVE7b0JBQ05NLE1BQU1ELE9BQU9FLGNBQWMsSUFBSTtvQkFDL0JDLGFBQWE7Z0JBQ2Y7WUFDRjtRQUNGLE9BQU87WUFDTFIsUUFBUTtnQkFDTk0sTUFBTTtnQkFDTkUsYUFBYTtZQUNmO1FBQ0Y7SUFDRjtBQUNGLEVBQUU7QUFFSyxNQUFNQyxxQkFBcUIsT0FDaENDO0lBRUEsT0FBTyxJQUFJWCxRQUFRLENBQUNDO1FBQ2xCLElBQUksT0FBT0MsV0FBVyxlQUFlQSxPQUFPQyxPQUFPLEVBQUU7WUFDbkRELE9BQU9DLE9BQU8sQ0FBQ0MsSUFBSSxDQUFDUSxHQUFHLENBQUM7Z0JBQUVKLGdCQUFnQkc7WUFBTSxHQUFHO2dCQUNqRFYsUUFBUTtvQkFDTk0sTUFBTUk7b0JBQ05GLGFBQWE7Z0JBQ2Y7WUFDRjtRQUNGLE9BQU87WUFDTFIsUUFBUTtnQkFDTk0sTUFBTUk7Z0JBQ05GLGFBQWE7WUFDZjtRQUNGO0lBQ0Y7QUFDRixFQUFFO0FBRUssTUFBTUksYUFBYSxPQUN4QkY7SUFFQSxPQUFPLElBQUlYLFFBQVEsQ0FBQ0M7UUFDbEIsSUFBSSxPQUFPQyxXQUFXLGVBQWVBLE9BQU9DLE9BQU8sRUFBRTtZQUNuREQsT0FBT0MsT0FBTyxDQUFDQyxJQUFJLENBQUNRLEdBQUcsQ0FBQztnQkFBRUUsUUFBUUg7WUFBTSxHQUFHO2dCQUN6Q1YsUUFBUTtvQkFDTk0sTUFBTTt3QkFBRVEsU0FBUztvQkFBSztvQkFDdEJOLGFBQWE7Z0JBQ2Y7WUFDRjtRQUNGLE9BQU87WUFDTFIsUUFBUTtnQkFDTk0sTUFBTTtvQkFBRVEsU0FBUztnQkFBSztnQkFDdEJOLGFBQWE7WUFDZjtRQUNGO0lBQ0Y7QUFDRixFQUFFO0FBRUYsa0JBQWtCO0FBQ1gsTUFBTU8sYUFBYSxPQUN4QmpCO0lBRUEsT0FBTztRQUNMUSxNQUFNO1lBQUVVLFNBQVM7UUFBMEM7UUFDM0RSLGFBQWE7SUFDZjtBQUNGLEVBQUU7QUFFSyxNQUFNUyxtQkFBbUIsT0FDOUJuQjtJQUVBLE9BQU87UUFDTFEsTUFBTTtZQUFFWSxVQUFVO1FBQThCO1FBQ2hEVixhQUFhO0lBQ2Y7QUFDRixFQUFFO0FBRUssTUFBTVcsUUFBUSxPQUNuQkMsY0FDQUMsbUJBQ0FDLGlCQUNBQyxXQUNBQztJQUVBLE9BQU87UUFDTFYsU0FBUztRQUNUUixNQUFNO1lBQ0pZLFVBQ0U7WUFDRk8sZ0JBQWdCSixvQkFBb0JLLFlBQVk7UUFDbEQ7UUFDQWxCLGFBQWE7SUFDZjtBQUNGLEVBQUUiLCJzb3VyY2VzIjpbIi9Vc2Vycy95Ym90L0RvY3VtZW50cy9aREVWRUxPUE1FTlQvY2xlYXJ0YWJBUFAvbGliL2FjdGlvbnMvc2V0dGluZ3MudHMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gU3R1YiBpbXBsZW1lbnRhdGlvbnMgZm9yIENocm9tZSBleHRlbnNpb24gYnVpbGRcbi8vIFRoZXNlIHJlcGxhY2Ugc2VydmVyIGFjdGlvbnMgdGhhdCBkb24ndCB3b3JrIGluIHN0YXRpYyBleHRlbnNpb24gZW52aXJvbm1lbnRcblxuaW50ZXJmYWNlIFBheWRheVNldHRpbmdzIHtcbiAgW2tleTogc3RyaW5nXTogdW5rbm93bjtcbn1cblxuaW50ZXJmYWNlIEFwaVJlc3BvbnNlPFQgPSB1bmtub3duPiB7XG4gIGRhdGE6IFQgfCBudWxsO1xuICBzZXJ2ZXJFcnJvcjogc3RyaW5nIHwgbnVsbDtcbn1cblxuaW50ZXJmYWNlIEFpUmVzcG9uc2Uge1xuICBzdWNjZXNzOiBib29sZWFuO1xuICBkYXRhOiB7XG4gICAgcmVzcG9uc2U6IHN0cmluZztcbiAgICBvbmJvYXJkaW5nU3RlcD86IG51bWJlcjtcbiAgfTtcbiAgc2VydmVyRXJyb3I6IHN0cmluZyB8IG51bGw7XG59XG5cbmV4cG9ydCBjb25zdCBnZXRQYXlkYXlTZXR0aW5ncyA9IGFzeW5jIChcbiAgX2lucHV0PzogUGF5ZGF5U2V0dGluZ3MsXG4pOiBQcm9taXNlPEFwaVJlc3BvbnNlPFBheWRheVNldHRpbmdzPj4gPT4ge1xuICAvLyBJbiBleHRlbnNpb24sIGdldCBmcm9tIENocm9tZSBzdG9yYWdlIGluc3RlYWQgb2YgZGF0YWJhc2VcbiAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7XG4gICAgaWYgKHR5cGVvZiBjaHJvbWUgIT09IFwidW5kZWZpbmVkXCIgJiYgY2hyb21lLnN0b3JhZ2UpIHtcbiAgICAgIGNocm9tZS5zdG9yYWdlLnN5bmMuZ2V0KFtcInBheWRheVNldHRpbmdzXCJdLCAocmVzdWx0KSA9PiB7XG4gICAgICAgIHJlc29sdmUoe1xuICAgICAgICAgIGRhdGE6IHJlc3VsdC5wYXlkYXlTZXR0aW5ncyB8fCBudWxsLFxuICAgICAgICAgIHNlcnZlckVycm9yOiBudWxsLFxuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXNvbHZlKHtcbiAgICAgICAgZGF0YTogbnVsbCxcbiAgICAgICAgc2VydmVyRXJyb3I6IG51bGwsXG4gICAgICB9KTtcbiAgICB9XG4gIH0pO1xufTtcblxuZXhwb3J0IGNvbnN0IHNhdmVQYXlkYXlTZXR0aW5ncyA9IGFzeW5jIChcbiAgaW5wdXQ/OiBQYXlkYXlTZXR0aW5ncyxcbik6IFByb21pc2U8QXBpUmVzcG9uc2U8UGF5ZGF5U2V0dGluZ3M+PiA9PiB7XG4gIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4ge1xuICAgIGlmICh0eXBlb2YgY2hyb21lICE9PSBcInVuZGVmaW5lZFwiICYmIGNocm9tZS5zdG9yYWdlKSB7XG4gICAgICBjaHJvbWUuc3RvcmFnZS5zeW5jLnNldCh7IHBheWRheVNldHRpbmdzOiBpbnB1dCB9LCAoKSA9PiB7XG4gICAgICAgIHJlc29sdmUoe1xuICAgICAgICAgIGRhdGE6IGlucHV0LFxuICAgICAgICAgIHNlcnZlckVycm9yOiBudWxsLFxuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXNvbHZlKHtcbiAgICAgICAgZGF0YTogaW5wdXQsXG4gICAgICAgIHNlcnZlckVycm9yOiBudWxsLFxuICAgICAgfSk7XG4gICAgfVxuICB9KTtcbn07XG5cbmV4cG9ydCBjb25zdCBzYXZlQXBpS2V5ID0gYXN5bmMgKFxuICBpbnB1dD86IHN0cmluZyxcbik6IFByb21pc2U8QXBpUmVzcG9uc2U8eyBzdWNjZXNzOiBib29sZWFuIH0+PiA9PiB7XG4gIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4ge1xuICAgIGlmICh0eXBlb2YgY2hyb21lICE9PSBcInVuZGVmaW5lZFwiICYmIGNocm9tZS5zdG9yYWdlKSB7XG4gICAgICBjaHJvbWUuc3RvcmFnZS5zeW5jLnNldCh7IGFwaUtleTogaW5wdXQgfSwgKCkgPT4ge1xuICAgICAgICByZXNvbHZlKHtcbiAgICAgICAgICBkYXRhOiB7IHN1Y2Nlc3M6IHRydWUgfSxcbiAgICAgICAgICBzZXJ2ZXJFcnJvcjogbnVsbCxcbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmVzb2x2ZSh7XG4gICAgICAgIGRhdGE6IHsgc3VjY2VzczogdHJ1ZSB9LFxuICAgICAgICBzZXJ2ZXJFcnJvcjogbnVsbCxcbiAgICAgIH0pO1xuICAgIH1cbiAgfSk7XG59O1xuXG4vLyBBSSBhY3Rpb24gc3R1YnNcbmV4cG9ydCBjb25zdCBzdWJtaXRDaGF0ID0gYXN5bmMgKFxuICBfaW5wdXQ/OiBzdHJpbmcsXG4pOiBQcm9taXNlPEFwaVJlc3BvbnNlPHsgbWVzc2FnZTogc3RyaW5nIH0+PiA9PiB7XG4gIHJldHVybiB7XG4gICAgZGF0YTogeyBtZXNzYWdlOiBcIkFJIGNoYXQgbm90IGF2YWlsYWJsZSBpbiBleHRlbnNpb24gbW9kZVwiIH0sXG4gICAgc2VydmVyRXJyb3I6IG51bGwsXG4gIH07XG59O1xuXG5leHBvcnQgY29uc3QgZ2VuZXJhdGVSZXNwb25zZSA9IGFzeW5jIChcbiAgX2lucHV0Pzogc3RyaW5nLFxuKTogUHJvbWlzZTxBcGlSZXNwb25zZTx7IHJlc3BvbnNlOiBzdHJpbmcgfT4+ID0+IHtcbiAgcmV0dXJuIHtcbiAgICBkYXRhOiB7IHJlc3BvbnNlOiBcIkFJIGZlYXR1cmVzIHJlcXVpcmUgd2ViIGFwcFwiIH0sXG4gICAgc2VydmVyRXJyb3I6IG51bGwsXG4gIH07XG59O1xuXG5leHBvcnQgY29uc3QgYXNrQWkgPSBhc3luYyAoXG4gIF91c2VyTWVzc2FnZT86IHN0cmluZyxcbiAgaGFzU2Vlbk9uYm9hcmRpbmc/OiBib29sZWFuLFxuICBfb25ib2FyZGluZ1N0ZXA/OiBudW1iZXIsXG4gIF91c2VyTmFtZT86IHN0cmluZyxcbiAgX2FnZW50TmFtZT86IHN0cmluZyxcbik6IFByb21pc2U8QWlSZXNwb25zZT4gPT4ge1xuICByZXR1cm4ge1xuICAgIHN1Y2Nlc3M6IHRydWUsXG4gICAgZGF0YToge1xuICAgICAgcmVzcG9uc2U6XG4gICAgICAgIFwiQUkgZmVhdHVyZXMgcmVxdWlyZSB3ZWIgYXBwLiBQbGVhc2UgdXNlIHRoZSBmdWxsIHdlYiB2ZXJzaW9uIGZvciBBSSBjaGF0LlwiLFxuICAgICAgb25ib2FyZGluZ1N0ZXA6IGhhc1NlZW5PbmJvYXJkaW5nID8gdW5kZWZpbmVkIDogMSxcbiAgICB9LFxuICAgIHNlcnZlckVycm9yOiBudWxsLFxuICB9O1xufTtcbiJdLCJuYW1lcyI6WyJnZXRQYXlkYXlTZXR0aW5ncyIsIl9pbnB1dCIsIlByb21pc2UiLCJyZXNvbHZlIiwiY2hyb21lIiwic3RvcmFnZSIsInN5bmMiLCJnZXQiLCJyZXN1bHQiLCJkYXRhIiwicGF5ZGF5U2V0dGluZ3MiLCJzZXJ2ZXJFcnJvciIsInNhdmVQYXlkYXlTZXR0aW5ncyIsImlucHV0Iiwic2V0Iiwic2F2ZUFwaUtleSIsImFwaUtleSIsInN1Y2Nlc3MiLCJzdWJtaXRDaGF0IiwibWVzc2FnZSIsImdlbmVyYXRlUmVzcG9uc2UiLCJyZXNwb25zZSIsImFza0FpIiwiX3VzZXJNZXNzYWdlIiwiaGFzU2Vlbk9uYm9hcmRpbmciLCJfb25ib2FyZGluZ1N0ZXAiLCJfdXNlck5hbWUiLCJfYWdlbnROYW1lIiwib25ib2FyZGluZ1N0ZXAiLCJ1bmRlZmluZWQiXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/actions/settings.ts\n"));

/***/ })

});