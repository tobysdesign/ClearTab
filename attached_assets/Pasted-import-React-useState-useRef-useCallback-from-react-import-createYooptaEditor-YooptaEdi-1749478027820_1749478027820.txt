import React, { useState, useRef, useCallback } from 'react';
import { createYooptaEditor, YooptaEditor } from '@yoopta/editor';
import {
  ParagraphPlugin,
  HeadingPlugin,
  ListPlugin,
  BoldPlugin,
  ItalicPlugin,
  CodePlugin,
} from '@yoopta/plugins';
import { useFloating, offset, useClick, useDismiss, useRole, useInteractions } from '@floating-ui/react';

const plugins = [
  ParagraphPlugin,
  HeadingPlugin,
  ListPlugin,
  BoldPlugin,
  ItalicPlugin,
  CodePlugin,
];

const editor = createYooptaEditor();

export default function NotionLikeEditor({ onCreateTask, onAskAI }) {
  const [value, setValue] = useState(editor.children);
  const [selection, setSelection] = useState(null);

  const { refs, floatingStyles, context } = useFloating({
    open: !!selection,
    onOpenChange: () => {},
    placement: 'top',
    middleware: [offset(10)],
  });

  const click = useClick(context);
  const dismiss = useDismiss(context);
  const role = useRole(context);
  const { getReferenceProps, getFloatingProps } = useInteractions([click, dismiss, role]);

  const handleChange = (newValue) => {
    setValue(newValue);
    const sel = window.getSelection();
    if (sel && sel.toString().length > 0) {
      setSelection(sel.toString());
    } else {
      setSelection(null);
    }
  };

  const handleConvertToTask = () => {
    if (selection) {
      onCreateTask(selection);
      setSelection(null);
    }
  };

  const handleAskAI = () => {
    if (selection) {
      onAskAI(selection);
      setSelection(null);
    }
  };

  return (
    <div className="relative">
      <YooptaEditor
        editor={editor}
        plugins={plugins}
        value={value}
        onChange={handleChange}
        className="yoopta-editor"
      />

      {selection && (
        <div
          ref={refs.setFloating}
          style={floatingStyles}
          className="absolute bg-white border rounded shadow-md p-2 z-50"
          {...getFloatingProps()}
        >
          <button onClick={handleConvertToTask}>üìù Convert to Task</button>
          <button onClick={handleAskAI}>‚ú® Ask AI</button>
        </div>
      )}
    </div>
  );
}