/* RecorderWidget CSS Module */

/* Flip container */
.flipContainer {
    /* layout */
    position: relative;

    /* box model */
    width: 100%;
    height: 100%;

    /* visual */
    perspective: 1000px;
    transform-style: preserve-3d;
}

.flipper {
    /* layout */
    position: relative;

    /* box model */
    width: 100%;
    height: 100%;

    /* visual */
    transform-style: preserve-3d;

    /* state */
    transition: transform 0.8s;
}

.flipped .flipper {
    transform: rotateY(180deg);
}

.front,
.back {
    /* layout */
    position: absolute;

    /* box model */
    width: 100%;
    height: 100%;

    /* visual */
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
}

.back {
    transform: rotateY(180deg);
}

.container {
    /* layout */
    position: relative;
    overflow: visible;

    /* box model */
    width: 100%;
    height: 100%;
    border: 1px solid #323235;
    border-radius: 22px;

    /* visual */
    background: linear-gradient(
        180deg,
        rgb(19, 19, 19) 4%,
        rgb(23, 21, 21) 100%
    );
    box-shadow:
        0px 8px 12px 6px rgba(0, 0, 0, 0.15),
        0px 4px 4px rgba(0, 0, 0, 0.3);
}

.containerInfoState {
    /* visual */
    background: linear-gradient(180deg, rgb(32 41 81 / 65%) 4%, rgba(23, 21, 21, 0.5) 100%), linear-gradient(135deg, rgba(59, 130, 246, 0.08) 0%, rgba(37, 99, 235, 0.05) 100%);
    border-color: rgba(59, 130, 246, 0.2);
}

.containerErrorState {
    /* visual */
    background:linear-gradient(180deg, rgb(115 54 54 / 95%) 4%, rgb(52 26 26 / 95%) 100%);
    border-color: rgba(239, 68, 68, 0.2);
}

.content {
    /* layout */
    display: flex;
    flex-direction: column;

    /* box model */
    width: 100%;
    height: 100%;
}

.header {
    /* box model */
    padding-top: 24px;
    padding-left: 24px;
    padding-right: 24px;
    padding-bottom: 0;
}

.headerText {
    /* typography */
    color: #d2d2d2;
    font-size: 10px;
    font-weight: 400;
    line-height: normal;
}

.body {
    /* layout */
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: flex-end;
    flex: 1;
    gap: 20px;
    margin-bottom: 24px;

    /* box model */
}

.buttonContainer {
    /* layout */
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
}

.button {
    position: relative;
}

.buttonOuter {
    /* layout */
    position: relative;

    /* box model */
    width: 50px;
    height: 50px;
    border-radius: 50%;

    /* visual */
    background: rgba(47, 48, 51, 0.2);
    box-shadow:
        0px 3.92602px 28.5587px rgba(0, 0, 0, 0.26),
        0px -3.92602px 15.7041px 3.92602px rgba(0, 0, 0, 0.57),
        0px -3.92602px 15.7041px 3.92602px #212121,
        0px -20px 13.7041px rgb(125 125 125 / 42%),
        0px -20px 6.8009px rgba(255, 255, 255, 0.01);
}

.buttonBackground {
    /* layout */
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;

    /* box model */
    border-radius: 1961.05px;

    /* visual */
    background: linear-gradient(
        180deg,
        rgba(45, 45, 45, 0.3) 0%,
        rgba(25, 25, 25, 0.5) 50%,
        rgba(15, 15, 15, 0.7) 100%
    );
    box-shadow: inset 0px 0px 30px rgba(0, 0, 0, 0.3);
}

.buttonBorder {
    /* layout */
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;

    /* box model */
    padding: 1px;
    border-radius: 100%;

    /* visual */
    background: linear-gradient(180deg, rgb(121 121 121) 0%, rgb(0, 0, 0) 30%);
    mask:
        linear-gradient(#fff 0 0) content-box,
        linear-gradient(#fff 0 0);
    -webkit-mask:
        linear-gradient(#fff 0 0) content-box,
        linear-gradient(#fff 0 0);
    mask-composite: exclude;
    -webkit-mask-composite: source-out;

    /* state */
    pointer-events: none;
}

.buttonTopHighlight {
    /* layout */
    position: absolute;
    top: 1px;
    left: 1px;
    right: 1px;

    /* box model */
    height: 39px;
    border-radius: 1961.05px 1961.05px 0 0;
    border-top: 1px solid rgba(255, 255, 255, 0.2);

    /* visual */
    background: linear-gradient(
        180deg,
        rgba(255, 255, 255, 0.12) 0%,
        rgba(255, 255, 255, 0.05) 40%,
        transparent 100%
    );
}

.recordingDot {
    /* layout */
    position: absolute;
    top: 10px;
    left: 20px;

    /* box model */
    width: 10px;
    height: 10px;
    border-radius: 50%;

    /* visual */
    background: rgba(248, 40, 10, 0.31);
    box-shadow: 0px 3px 2px 0px rgba(0, 0, 0, 0.35) inset;

    /* state */
    transition: all 0.3s ease;
}

.recordingDot:hover,
.recordingDotHover {
    background: rgba(248, 40, 10, 0.8);
    box-shadow:
        0px 3px 2px 0px rgba(0, 0, 0, 0.35) inset,
        0 0 5px rgba(248, 40, 10, 0.8),
        0 0 10px rgba(248, 40, 10, 0.6),
        0 0 15px rgba(248, 40, 10, 0.4);
}

.bodyText {
    /* typography */
    color: #555;
    font-family: "Inter Display", sans-serif;
    font-size: 14px;
    font-weight: 400;
    line-height: 1.2;
}

/* Recording state (back side) */
.recordingBody {
    /* layout */
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    flex: 1;

    /* box model */
    padding: 0 24px 24px;
}

/* Waveform visualization */
.waveformContainer {
    /* layout */
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 2px;

    /* box model */
    width: 100%;
    height: 48px;
    margin-top: 16px;
}

.waveformBar {
    /* box model */
    width: 2px;
    min-height: 3px;
    border-radius: 9999px;

    /* visual */
    background: linear-gradient(
        180deg,
        rgba(255, 255, 255, 0.9) 0%,
        rgba(255, 255, 255, 0.5) 100%
    );
    box-shadow: 0 0 4px rgba(255, 255, 255, 0.2);
}

/* Timer */
.timerContainer {
    /* layout */
    display: flex;
    justify-content: center;
    align-items: center;

    /* box model */
    margin-bottom: 16px;
}

.timer {
    /* typography */
    color: #ccc;
    font-family: "Inter Display", sans-serif;
    font-size: 14px;
    font-weight: 300;
}

/* Controls */
.recordingControls {
    /* layout */
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 12px;
    margin-top: auto;
}

.controlButton {
    /* layout */
    display: flex;
    align-items: center;
    justify-content: center;

    /* box model */
    padding: 0;
    border: none;

    /* visual */
    background: transparent;
    outline: none;

    /* state */
    cursor: pointer;
}

.controlButtonInner {
    /* layout */
    display: flex;
    align-items: center;
    justify-content: center;

    /* box model */
    width: 32px;
    height: 32px;
    border: 1px solid rgba(255, 255, 255, 0.1);
    border-radius: 50%;

    /* visual */
    background-color: #2a2426;
    box-shadow:
        0px 2px 4px rgba(0, 0, 0, 0.2),
        inset 0px 1px 1px rgba(255, 255, 255, 0.05);

    /* state */
    transition: all 0.2s ease;
}

.controlButton:hover .controlButtonInner {
    background-color: #3a3436;
    transform: translateY(-1px);
    box-shadow:
        0px 3px 6px rgba(0, 0, 0, 0.25),
        inset 0px 1px 1px rgba(255, 255, 255, 0.1);
}

.controlButton:active .controlButtonInner {
    background-color: #2a2426;
    transform: translateY(1px);
    box-shadow:
        0px 1px 2px rgba(0, 0, 0, 0.3),
        inset 0px 1px 1px rgba(0, 0, 0, 0.1);
}

.controlIcon {
    /* box model */
    width: 16px;
    height: 16px;

    /* typography */
    color: #ccc;
}

.doneButton {
    display: flex;
    flex-direction: column;
    align-items: center;
}

.doneText {
    /* typography */
    color: rgba(255, 255, 255, 0.7);
    font-size: 12px;

    /* box model */
    margin-top: 4px;
}

/* Permission message */
.permissionMessage {
    /* layout */
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    text-align: center;
    gap: 12px;

    /* box model */
    width: 100%;
    padding: 14px;
    border-radius: 12px;

    /* visual */
    background: linear-gradient(135deg, rgba(59, 130, 246, 0.15) 0%, rgba(37, 99, 235, 0.1) 100%);
    border: 1px solid rgba(59, 130, 246, 0.3);
}

.permissionMessage p {
    /* typography */
    color: rgba(255, 255, 255, 0.9);
    font-size: 12px;
    line-height: 1.4;
    margin: 0;
    max-width: 220px;
}

.permissionMessageBlocked {
    background: linear-gradient(135deg, rgba(239, 68, 68, 0.15) 0%, rgba(220, 38, 38, 0.1) 100%);
    border: 1px solid rgba(239, 68, 68, 0.3);
}

.permissionIcon {
    /* box model */
    width: 28px;
    height: 28px;

    /* typography */
    color: rgba(59, 130, 246, 0.8);
}

.permissionIconBlocked {
    color: rgba(239, 68, 68, 0.8);
}

.permissionTitle {
    /* typography */
    color: white;
    font-size: 14px;
    font-weight: 400;
    margin: 0 0 12px 0;
}

.permissionText {
    /* typography */
    color: rgba(255, 255, 255, 0.9);
    font-size: 13px;
    line-height: 1.2;
    text-align: left;

    /* box model */
    margin: 0;
    max-width: 260px;
}
.containerErrorState .recordingBody{align-items: start;}
.permissionRetry {
    /* box model */
    
    
    
    

    /* typography */
    color: #ddd;
    font-size: 13px;
    font-weight: 500;
    text-decoration: underline;
    margin-top:12px;

    /* visual */
    

    /* state */
    cursor: pointer;
    transition: all 0.2s;
}

.permissionRetry:hover {
    background: rgba(255, 255, 255, 0.1);
    border-color: rgba(255, 255, 255, 0.3);
    transform: translateY(-1px);
}

/* Processing state */
.processingContainer {
    /* layout */
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: 8px;
}

.processingContainer .controlIcon {
    /* box model */
    width: 24px;
    height: 24px;

    /* typography */
    color: rgb(96, 165, 250);
}

.processingContainer .doneText {
    color: rgb(96, 165, 250);
}

/* Transcribing Screen */
.transcribingWrapper {
    /* layout */
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: space-between;

    /* box model */
    width: 100%;
    height: 100%;
    padding: 40px 24px;
}

.transcribingContent {
    /* layout */
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
}

.gifPlaceholder {
    /* layout */
    display: flex;
    align-items: center;
    justify-content: center;

    /* box model */
    width: 180px;
    height: 180px;
    margin-bottom: 32px;
    border-radius: 8px;

    /* visual */
    background: linear-gradient(135deg, #7c3aed 0%, #a855f7 100%);
}

.animatedDotsContainer {
    /* layout */
    display: flex;
    gap: 8px;
}

.animatedDot {
    /* box model */
    width: 16px;
    height: 16px;
    border-radius: 50%;

    /* visual */
    background-color: rgba(255, 255, 255, 0.8);
    opacity: 0.2;

    /* state */
    animation: dotPulse 1.4s infinite ease-in-out both;
}

.animatedDot:nth-child(1) {
    animation-delay: -0.32s;
}

.animatedDot:nth-child(2) {
    animation-delay: -0.16s;
}

.animatedDot:nth-child(3) {
    animation-delay: 0s;
}

.animatedDot:nth-child(4) {
    animation-delay: 0.16s;
}

@keyframes dotPulse {
    0%,
    80%,
    100% {
        transform: scale(0.8);
        opacity: 0.2;
    }
    40% {
        transform: scale(1.2);
        opacity: 1;
    }
}

.transcribingTitle {
    /* typography */
    color: white;
    font-size: 20px;
    font-weight: 400;
    letter-spacing: -0.02em;

    /* box model */
    margin-bottom: 8px;
}

.transcribingSubtitle {
    /* typography */
    color: rgba(255, 255, 255, 0.5);
    font-size: 14px;
    font-weight: 300;
    font-style: italic;
    line-height: 1.6;

    /* box model */
    margin-bottom: auto;
}

.okButton {
    /* box model */
    padding: 12px 48px;
    border: 1px solid rgba(255, 255, 255, 0.15);
    border-radius: 32px;

    /* typography */
    color: white;
    font-size: 16px;
    font-weight: 500;

    /* visual */
    background-color: rgba(255, 255, 255, 0.08);

    /* state */
    cursor: pointer;
    transition: all 0.2s;
}

.okButton:hover {
    background-color: rgba(255, 255, 255, 0.15);
    border-color: rgba(255, 255, 255, 0.3);
    transform: translateY(-1px);
}

.okButton:active {
    transform: translateY(0);
}

/* Success state */
.successContainer {
    /* layout */
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: 8px;
}

.successContainer .controlIcon {
    /* box model */
    width: 24px;
    height: 24px;

    /* typography */
    color: rgb(74, 222, 128);
}

.successContainer .doneText {
    color: rgb(74, 222, 128);
}

/* Mute button states */
.muteButtonActive .controlButtonInner {
    background: linear-gradient(180deg, #4a1a1a 0%, #2a1010 100%);
    border: 1px solid rgba(248, 113, 113, 0.3);
    box-shadow:
        0px 2px 4px rgba(248, 113, 113, 0.2),
        inset 0px 1px 1px rgba(248, 113, 113, 0.1);
}

.muteButtonInnerActive {
    background: linear-gradient(180deg, #4a1a1a 0%, #2a1010 100%);
    border: 1px solid rgba(248, 113, 113, 0.3);
}

.muteButtonActive:hover .controlButtonInner {
    background: linear-gradient(180deg, #5a2020 0%, #3a1515 100%);
    box-shadow:
        0px 3px 6px rgba(248, 113, 113, 0.25),
        inset 0px 1px 1px rgba(248, 113, 113, 0.15);
}

.muteButtonActive .controlIcon {
    color: rgb(248, 113, 113);
}

.muteTextActive {
    color: rgb(248, 113, 113);
}

/* Utility class for backface visibility */
.backface-visibility-hidden {
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
}

/* Custom tooltip styles */
.tooltip {
    /* typography */
    color: #ccc;
    font-size: 11px;
    font-weight: 400;
    text-align: center;

    /* box model */
    padding: 6px 10px;
    border-radius: 6px;

    /* visual */
    background-color: #2a2426;
    border: 1px solid rgba(255, 255, 255, 0.1);
    box-shadow: 0px 2px 8px rgba(0, 0, 0, 0.3);

    /* triangle dimension */
    --b: 10px; /* base */
    --h: 5px; /* height */
    --p: 50%; /* triangle position (0%:left 100%:right) */
    --r: 6px; /* the radius */

    border-radius: var(--r) var(--r) min(var(--r), 100% - var(--p) - var(--b) / 2) min(var(--r), var(--p) - var(--b) / 2) / var(--r);
    clip-path: polygon(
        0 100%,
        0 0,
        100% 0,
        100% 100%,
        min(100%, var(--p) + var(--b) / 2) 100%,
        var(--p) calc(100% + var(--h)),
        max(0%, var(--p) - var(--b) / 2) 100%
    );
    /* Note: border-image fills the tail with the same color as background */
    border-image: conic-gradient(#2a2426 0 0) fill 0 /
        var(--r) calc(100% - var(--p) - var(--b) / 2) 0 calc(var(--p) - var(--b) / 2) /
        0 0 var(--h) 0;
    
    /* Force consistent appearance */
    z-index: 9999;
}
